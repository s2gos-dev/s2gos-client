# generated by gen_server.py:
#   filename:  routes.py:
#   timestamp: 2025-06-23T18:26:32.534138


from s2gos.common.models import (
    ProcessRequest,
)

from .app import app
from .provider import ServiceProvider


# noinspection PyPep8Naming
@app.get("/")
async def get_capabilities():
    return await ServiceProvider.instance().get_capabilities()


# noinspection PyPep8Naming
@app.get("/conformance")
async def get_conformance():
    return await ServiceProvider.instance().get_conformance()


# noinspection PyPep8Naming
@app.get("/processes")
async def get_processes():
    return await ServiceProvider.instance().get_processes()


# noinspection PyPep8Naming
@app.get("/processes/{processID}")
async def get_process(processID: str):
    return await ServiceProvider.instance().get_process(process_id=processID)


# noinspection PyPep8Naming
@app.post("/processes/{processID}/execution")
async def execute_process(processID: str, request: ProcessRequest):
    return await ServiceProvider.instance().execute_process(
        process_id=processID, request=request
    )


# noinspection PyPep8Naming
@app.get("/jobs")
async def get_jobs():
    return await ServiceProvider.instance().get_jobs()


# noinspection PyPep8Naming
@app.get("/jobs/{jobId}")
async def get_job(jobId: str):
    return await ServiceProvider.instance().get_job(job_id=jobId)


# noinspection PyPep8Naming
@app.delete("/jobs/{jobId}")
async def dismiss_job(jobId: str):
    return await ServiceProvider.instance().dismiss_job(job_id=jobId)


# noinspection PyPep8Naming
@app.get("/jobs/{jobId}/results")
async def get_job_results(jobId: str):
    return await ServiceProvider.instance().get_job_results(job_id=jobId)
